bool <- DataType
return42 <- Identifier
( <- OpenParenthesis
) <- CloseParenthesis
{ <- LeftCurlyBracket
return <- KeyWord
42 <- NumberValue
; <- Semicolon
} <- RightCurlyBracket
void <- DataType
main <- ReservedIdentifier
( <- OpenParenthesis
) <- CloseParenthesis
{ <- LeftCurlyBracket
string <- DataType
( <- OpenParenthesis
42 <- NumberValue
) <- CloseParenthesis
; <- Semicolon
string <- DataType
str <- Identifier
= <- AssignmentOperator
"Hello world" <- StringValue
; <- Semicolon
int <- DataType
a_ <- Identifier
= <- AssignmentOperator
42 <- NumberValue
/ <- MathOperation
3 <- NumberValue
; <- Semicolon
double <- DataType
f <- Identifier
= <- AssignmentOperator
20.5 <- NumberValue
+ <- MathOperation
0.5 <- NumberValue
+ <- MathOperation
5. <- NumberValue
+ <- MathOperation
15 <- NumberValue
; <- Semicolon
bool <- DataType
isBeautiful <- Identifier
= <- AssignmentOperator
true <- BooleanValue
; <- Semicolon
int <- DataType
[ <- LeftSquareBracket
] <- RightSquareBracket
q <- Identifier
= <- AssignmentOperator
{ <- LeftCurlyBracket
3 <- NumberValue
, <- Comma
14 <- NumberValue
, <- Comma
15 <- NumberValue
} <- RightCurlyBracket
; <- Semicolon
read <- ReservedIdentifier
( <- OpenParenthesis
a_ <- Identifier
) <- CloseParenthesis
; <- Semicolon
print <- ReservedIdentifier
( <- OpenParenthesis
str <- Identifier
, <- Comma
a_ <- Identifier
, <- Comma
f <- Identifier
, <- Comma
/ <- MathOperation
4 <- NumberValue
12 <- NumberValue
) <- CloseParenthesis
; <- Semicolon
while <- KeyWord
( <- OpenParenthesis
true <- BooleanValue
) <- CloseParenthesis
{ <- LeftCurlyBracket
if <- KeyWord
( <- OpenParenthesis
bla <- Identifier
== <- LogicalOperation
f <- Identifier
) <- CloseParenthesis
{ <- LeftCurlyBracket
bre <- Identifier
ak <- Identifier
; <- Semicolon
} <- RightCurlyBracket
else <- KeyWord
{ <- LeftCurlyBracket
continue <- KeyWord
; <- Semicolon
} <- RightCurlyBracket
} <- RightCurlyBracket
if <- KeyWord
( <- OpenParenthesis
! <- LogicalOperation
a_ <- Identifier
< <- LogicalOperation
f <- Identifier
&& <- LogicalOperation
( <- OpenParenthesis
isBeautiful <- Identifier
|| <- LogicalOperation
! <- LogicalOperation
isBeautiful <- Identifier
) <- CloseParenthesis
) <- CloseParenthesis
{ <- LeftCurlyBracket
return <- KeyWord
8 <- NumberValue
* <- MathOperation
4 <- NumberValue
+ <- MathOperation
3 <- NumberValue
- <- MathOperation
5 <- NumberValue
* <- MathOperation
return42 <- Identifier
( <- OpenParenthesis
) <- CloseParenthesis
; <- Semicolon
} <- RightCurlyBracket
double <- DataType
dream <- Identifier
= <- AssignmentOperator
13.1415926535897932384 <- NumberValue
; <- Semicolon
double <- DataType
p <- Identifier
= <- AssignmentOperator
-5. <- NumberValue
- <- MathOperation
-.5 <- NumberValue
- <- MathOperation
-1.25 <- NumberValue
+ <- MathOperation
+25 <- NumberValue
- <- MathOperation
-5 <- NumberValue
; <- Semicolon
int <- DataType
bla <- Identifier
= <- AssignmentOperator
0b0101 <- Error
+ <- MathOperation
07 <- NumberValue
+ <- MathOperation
10 <- NumberValue
+ <- MathOperation
0xFF <- Error
; <- Semicolon
} <- RightCurlyBracket
 <- EndOfFile
